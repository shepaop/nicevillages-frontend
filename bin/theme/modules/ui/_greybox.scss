/*
Greybox

Fenêtre modale

Markup:
<div id="test" class="wysiwyg">
  <h2>Config de base :</h2>
  <pre>
    var defaults = {
      prefix: 'greybox',
      duration: (typeof _duration === 'number') ? _duration : 500,
      close: '',
      title: '',
      cssClass: '',
      // Events
      onBeforeOpen: function(){},
      onAfterOpen: function(){},
      onBeforeClose: function(){},
      onAfterClose: function(){}
    };
  </pre>
  <h2>Config pour cette page d'exemple :</h2>
	<pre>
    var cfg = {
      close: 'Fermer',
      cssClass: 'std',
      isFixed: true,
      onBeforeOpen: function(self){console.log('onBeforeOpen');},
      onAfterOpen: function(self){console.log('onAfterOpen');},
      onBeforeClose: function(self){console.log('onBeforeClose');},
      onAfterClose: function(self){console.log('onAfterClose');}
    };
	</pre>
			<h2>Exemples :</h2>
			<ul class="links">
				<li>
					<em>Nettoyer le contenu de la greybox</em><br />
					<a href="#" onclick="gb.open(); return false;">
						gb.open();
					</a>
				</li>
				<li>
					<em>Affichage d'un texte HTML</em><br />
<a href="#" onclick="gb.html('<p>Message : Lorem ipsum dolor sit amet</p>'); return false;">
                                                                                           gb.html('&lt;p&gt;Message : Lorem ipsum dolor sit amet&lt;/p&gt;');
</a>
</li>
<li>
<em>Appel d'une page en IFRAME</em><br />
					<a href="#" onclick="gb.iframe('http://www.w3schools.org/', 450); return false;">
                                                     gb.iframe('http://www.w3schools.org/', 450)
</a>
</li>
<li>
<em>Appel d'une vidéo YOUTUBE</em><br />
					<a href="#" onclick="gb.youtube('_zIQWRgRCoI'); return false;">
						gb.youtube('_zIQWRgRCoI', [width = 400]);
					</a>
				</li>
				<li>
					<em>Appel d'une vidéo DAILYMOTION</em><br />
<a href="#" onclick="gb.dailymotion('x8r0vo'); return false;">
                                                             gb.dailymotion('x8r0vo', [width = 400]);
</a>
</li>
<li>
<em>Appel d'une vidéo VIMEO</em><br />
					<a href="#" onclick="gb.vimeo('100949626'); return false;">
						gb.vimeo('100949626', [width = 400]);
					</a>
				</li>
				<li>
					<em>Appel d'une IMAGE</em><br />
<a href="#" onclick="gb.image('http://espace-langues.paris.iufm.fr/IMG/jpg/san_francisco.jpg'); return false;">
                                                                                                              gb.image('http://espace-langues.paris.iufm.fr/IMG/jpg/san_francisco.jpg');
</a><br />
<a href="#" onclick="gb.image('http://www.ravensburger.com/produktseiten/normal_q/16604.jpg'); return false;">
                                                                                                             gb.image('http://www.ravensburger.com/produktseiten/normal_q/16604.jpg');
</a>
</li>
<li>
<em>Appel d'une page en AJAX en GET</em><br />
					<a href="#" onclick="gb.ajaxGet('example/get.php'); return false;">
						gb.ajaxGet('example/get.php');
					</a><br />
					<a href="#" onclick="gb.ajaxGet('example/get.php?var1=12&var2=15'); return false;">
						gb.ajaxGet('example/get.php?var1=12&var2=15');
					</a><br />
					<a href="#" onclick="gb.ajaxGet('example/get.php', {var1:'12',var2:'15'}); return false;">
						gb.ajaxGet('example/get.php', {var1:'12',var2:'15'});
					</a><br />
					<a href="#" onclick="gb.ajaxGet('example/get.php', {var1:'12',var2:'15'}, function(_self, url, data){console.log('callback ==> ', _self, url, data);}); return false;">
						gb.ajaxGet('example/get.php', {var1:'12',var2:'15'}, function(_self, url, data){console.log('callback ==> ', _self, url, data);});
					</a>
				</li>
				<li>
					<em>Appel d'une page en AJAX avec paramètres en POST</em><br />
<a href="#" onclick="gb.ajaxPost('example/post.php', {id:12}); return false;">
                                                                             gb.ajaxPost('example/post.php', {id:12});
</a><br />
<a href="#" onclick="gb.ajaxPost('example/post.php', {id:12}, function(_self, url, data){console.log('callback ==> ', _self, url, data);}); return false;">                                                                                                                                                         gb.ajaxPost('example/post.php', {id:12}, function(_self, url, data){console.log('callback ==> ', _self, url, data);});
</a>
</li>
</ul>
</div>
</div>
<script>
 var gb = new Greybox({
  close: 'Fermer',
  cssClass: 'std',
  onBeforeOpen: function(self){console.log('onBeforeOpen');},
  onAfterOpen: function(self){console.log('onAfterOpen');},
  onBeforeClose: function(self){console.log('onBeforeClose');},
  onAfterClose: function(self){console.log('onAfterClose');}
});
</script>

Styleguide 5.1.5.
*/

$name: "greybox";

.#{$name} {
  z-index: 40;
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;

  &--overlay {
    z-index: 41;
    position: fixed;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: rgba(red(get-color("grayscale", "dark")), green(get-color("grayscale", "dark")), blue(get-color("grayscale", "dark")), .6);
  }

  &--container {
    @extend %background-grayscale-light;
    @extend %box-shadow-large;
    z-index: 42;
    position: fixed;
    left: 50%;
    top: 50%;
    @extend %block-spacing-std;
    width: calc(100% - #{get-layout("block-spacing", "large")});
    max-height: calc(100% - #{get-layout("block-spacing", "large")});
    transform: translate(-50%, -50%);

    @include breakpoint('desktop') {
      width: 50%;
    }

    @include breakpoint('desktop') {
      position: absolute;
      top: 0;
      width: 25%;
      max-height: none;
      transform: translateX(-50%);
    }
  }

  &--content {
    //
  }

  &--title {
    @extend %h2;
  }

  &--close {
    @extend %icon-ui_close-std;
    @extend %fs-std-down-1;
    white-space: nowrap;
    line-height: get-icon("icon-ui_close-std", "height");
    position: absolute;
    right: 0;
    top: 0;
    cursor: pointer;
    text-transform: uppercase;
    padding-right: get-icon("icon-ui_close-std", "width") + get-layout("text-spacing", "std");
    min-height: get-icon("icon-ui_close-std", "height");
    background-position: right center;

    &:hover {
      @extend %icon-ui_close-action;
    }
  }

  &--image,
  &--iframe {
    display: block;
  }

  &--image {
    width: 100%;
    height: auto;
  }

  &--loading {

    .#{$name}--content {
      @extend %ajax-loader;
    }
  }

  &.center {

    .#{$name}--container {
      position: fixed;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }
}
